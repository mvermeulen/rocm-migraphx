ARG base_image="rocm/pytorch:rocm5.3_ubuntu20.04_py3.7_pytorch_1.12.1"
FROM ${base_image}
ENV DEBIAN_FRONTEND noninteractive
ENV TOKENIZERS_PARALLELISM=false
ENV ROC_USE_FGS_KERNARG=0
ARG branch="branch_for_ort"
ARG build_type="Release"
ARG ort_repository="https://github.com/microsoft/onnxruntime"
ARG ort_branch="main"

WORKDIR /workspace

# pre-requisites
ENV CMAKE_VERSION=3.24.2
RUN cd /usr/local && \
    wget -q -O - https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz | tar zxf -
ENV PATH=/usr/local/cmake-${CMAKE_VERSION}-linux-x86_64/bin:${PATH}
RUN apt update && apt install -y git wget software-properties-common lsb-release python3-dev python3-numpy python3-setuptools python3-wheel python3-pip
RUN apt update && apt install -y time

# build MIGraphX
COPY patch.disable_migraphx_doc /workspace
RUN apt install -y half
RUN pip3 install https://github.com/RadeonOpenCompute/rbuild/archive/master.tar.gz
RUN cd /workspace && git clone --depth=1 --branch ${branch} https://github.com/ROCmSoftwarePlatform/AMDMIGraphX
RUN cd /workspace && patch -N AMDMIGraphX/CMakeLists.txt < patch.disable_migraphx_doc || true
RUN cd /workspace/AMDMIGraphX && rbuild package --cxx /opt/rocm/llvm/bin/clang++ -d /workspace/AMDMIGraphX/deps -B /workspace/AMDMIGraphX/build -DPYTHON_EXECUTABLE=/usr/bin/python3
RUN cd /workspace/AMDMIGraphX/build && dpkg -i *.deb

# build ONNX runtime wheel package
RUN git clone --recursive ${ort_repository}
RUN cd onnxruntime && git checkout ${ort_branch}
#RUN cd onnxruntime && sed -i 's/Version(torch.__version__) >= Version("1.11.0")/Version(torch.__version__).release >= Version("1.11.0").release/g' onnxruntime/python/tools/transformers/torch_onnx_export_helper.py
RUN cd onnxruntime && ./build.sh --parallel --cmake_extra_defines ONNXRUNTIME_VERSION=`cat ./VERSION_NUMBER` --config $build_type --skip_tests --build_wheel --use_migraphx --use_rocm --rocm_version=5.3 --rocm_home /opt/rocm
RUN pip3 install /workspace/onnxruntime/build/Linux/$build_type/dist/*.whl
RUN pip3 install psutil onnx coloredlogs torch packaging transformers sympy
RUN pip3 install -U numpy
